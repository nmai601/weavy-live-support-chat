@model string
@{
    var attrs = new Dictionary<string, object>();
    attrs["type"] = "text";
    attrs["class"] = "form-control";

    var meta = ViewData.ModelMetadata;
    if (meta.IsRequired) {
        attrs["required"] = null;
    }

    var error = ViewData.ErrorMessage();
    if (error != null) {
        attrs.Append("class", "is-invalid");
    }

    var minute = new Dictionary<string, string> {
        { "* * * * *", T["Every minute"].ToString()},
        { "*/15 * * * *", T["Every 15 minutes"].ToString()},
        { "*/30 * * * *", T["Every 30 minutes"].ToString()},
    };

    var hour = new Dictionary<string, string> {
        { "0 * * * *", T["Every hour"].ToString()},
        { "0 */2 * * *", T["Every two hours"].ToString()},
        { "0 */4 * * *", T["Every four hours"].ToString()},
        { "0 */8 * * *", T["Every eight hours"].ToString()},
        { "0 */12 * * *", T["Every twelve hours"].ToString()}
    };

    var day = new Dictionary<string, string> {
        { "0 4 * * *", T["Daily at 4AM"].ToString()},
        { "0 8 * * *", T["Daily at 8AM"].ToString()},
        { "0 12 * * *", T["Daily at noon"].ToString()},
        { "0 16 * * *", T["Daily at 4PM"].ToString()},
        { "0 20 * * *", T["Daily at 8PM"].ToString()},
        { "0 0 * * *", T["Daily at midnight"].ToString()}
    };

    var week = new Dictionary<string, string> {
        {"0 0 * * 1", T["At midnight on Mondays"].ToString()},
        {"0 0 * * 2", T["At midnight on Tuesdays"].ToString()},
        {"0 0 * * 3", T["At midnight on Wednesdays"].ToString()},
        {"0 0 * * 4", T["At midnight on Thursdays"].ToString()},
        {"0 0 * * 5", T["At midnight on Fridays"].ToString()},
        {"0 0 * * 6", T["At midnight on Saturdays"].ToString()},
        {"0 0 * * 0", T["At midnight on Sundays"].ToString()}
    };

    var month = new Dictionary<string, string> {
        {"0 0 1 * *", T["On the first of every month at midnight"].ToString()},
        {"0 0 15 * *", T["On the 15:th of every month at midnight"].ToString()}
    };

    var year = new Dictionary<string, string> {
        {"0 0 1 1 *", T["At midnight on the first of January"].ToString()},
        {"0 0 1 2 *", T["At midnight on the first of February"].ToString()},
        {"0 0 1 3 *", T["At midnight on the first of March"].ToString()},
        {"0 0 1 4 *", T["At midnight on the first of April"].ToString()},
        {"0 0 1 5 *", T["At midnight on the first of May"].ToString()},
        {"0 0 1 6 *", T["At midnight on the first of June"].ToString()},
        {"0 0 1 7 *", T["At midnight on the first of July"].ToString()},
        {"0 0 1 8 *", T["At midnight on the first of August"].ToString()},
        {"0 0 1 9 *", T["At midnight on the first of September"].ToString()},
        {"0 0 1 10 *", T["At midnight on the first of October"].ToString()},
        {"0 0 1 11 *", T["At midnight on the first of November"].ToString()},
        {"0 0 1 12 *", T["At midnight on the first of December"].ToString()}
    };

    bool selected = Model == null || minute.ContainsKey(Model) || hour.ContainsKey(Model) || day.ContainsKey(Model) || week.ContainsKey(Model) || month.ContainsKey(Model) || year.ContainsKey(Model);
}

@if (ViewData.RenderSurroundingHtml()) {
    WriteLiteral(@"<div class=""form-group"">");
}

@if (ViewData.RenderLabel()) {
    @Html.LabelFor(m => m)
}

@if (selected) {
    <select class="form-control" name="@ViewData.TemplateInfo.GetFullHtmlFieldName("")" id="@ViewData.TemplateInfo.GetFullHtmlFieldId("")">
        <option value=""></option>
        <optgroup label="@T["Minute by minute"]">
            @foreach (var c in minute) {
                <option value="@c.Key" @(Model == c.Key ? "selected" : "")>@c.Value</option>
            }
        </optgroup>
        <optgroup label="@T["Hourly"]">
            @foreach (var c in hour) {
                <option value="@c.Key" @(Model == c.Key ? "selected" : "")>@c.Value</option>
            }
        </optgroup>
        <optgroup label="@T["Daily"]">
            @foreach (var c in day) {
                <option value="@c.Key" @(Model == c.Key ? "selected" : "")>@c.Value</option>
            }
        </optgroup>
        <optgroup label="@T["Weekly"]">
            @foreach (var c in week) {
                <option value="@c.Key" @(Model == c.Key ? "selected" : "")>@c.Value</option>
            }
        </optgroup>
        <optgroup label="@T["Monthly"]">
            @foreach (var c in month) {
                <option value="@c.Key" @(Model == c.Key ? "selected" : "")>@c.Value</option>
            }
        </optgroup>
        <optgroup label="@T["Yearly"]">
            @foreach (var c in year) {
                <option value="@c.Key" @(Model == c.Key ? "selected" : "")>@c.Value</option>
            }
        </optgroup>
    </select>
} else {
    @Html.TextBox("", ViewData.TemplateInfo.FormattedModelValue, attrs)
}

@if (error != null) {
    <div class="invalid-feedback">@error</div>
} else if (ViewData.RenderDescription()) {
    <div class="form-text">@meta.Description</div>
}

@if (ViewData.RenderSurroundingHtml()) {
    WriteLiteral(@"</div>");
}

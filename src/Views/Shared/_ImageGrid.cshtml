@model IEnumerable<Attachment>
@{
    var count = Model?.Count() ?? 0;
    var index = 0;
    var limit = 3;
    // check if width is passed in
    var width = ViewBag.Width as double?;
}

<div class="image-grid" data-image-count="@count">
    @foreach (var img in Model.Take(limit)) {
        var attrs = Html.PreviewAttributes(img);
        var ext = FileUtils.GetExtension(img.Blob.Name);
        var gif = ext.Equals(".gif");
        var svg = ext.Equals(".svg");
        var ani = gif || svg;
        var src = ani ? img.DownloadUrl() : img.ThumbUrl(1920, 1920);
        var thumbSrc = ani ? img.DownloadUrl() : img.ThumbUrl(512, 512);

        var padding = (100 / img.Blob.Ratio()).ToString("0.00000", System.Globalization.CultureInfo.InvariantCulture) + "%";
        var ratio = img.Blob.Ratio().ToString("0.00000", System.Globalization.CultureInfo.InvariantCulture);
        var flexBasis = ratio + "px";
        if (index == 0 && count != 2) {
            // first image should span entire row (unless only 2 images)
            flexBasis = "100%";
        }
        var flex = $"{ratio} {ratio} {flexBasis}";

        <div class="image" style="flex: @flex;">
            <a href="@img.DownloadUrl()" style="padding-bottom: @padding;" @Html.Raw(attrs.AsHtmlAttributes())>
                <img class="content-thumb" src="@thumbSrc" alt="" loading="lazy" />
                @if (count > limit && index == limit - 1) {
                    <span class="more">+@Model.Skip(limit).Count()</span>
                }
            </a>
        </div>

        index++;
    }

    @foreach (var img in Model.Skip(limit)) {
        var attrs = Html.PreviewAttributes(img);
        <a href="@img.DownloadUrl()" @Html.Raw(attrs.AsHtmlAttributes())></a>
    }
</div>


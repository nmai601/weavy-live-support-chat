@model App

@if (WeavyContext.Space.HasPermission(Permission.Apps) || Model.HasPermission(Permission.Edit)) {
    <div class="dropdown">
        <button type="button" class="btn btn-icon dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">@Svg.Icon("dots-vertical")</button>
        <div class="dropdown-menu dropdown-menu-right">

            @if (Model.HasPermission(Permission.Edit)) {
                if (Html.HasEditors(except: new List<string> { nameof(Model.Name) })) {
                    <a class="dropdown-item" href="@Model.Url()/edit" data-toggle="modal" data-target="#ajax-modal" data-path="@(Url.Action<AppController>(c => c.Edit(WeavyContext.App.Id)))" data-title="Edit tab">@Svg.Icon("pencil") @T["Edit tab"]</a>
                }
                <a class="dropdown-item" href="@Model.Url()/rename" data-toggle="modal" data-target="#ajax-modal" data-path="@(Url.Action<AppController>(c => c.EditName(WeavyContext.App.Id)))" data-title="Rename tab">@Svg.Icon("textbox") @T["Rename tab"]</a>

                if (Model.HasPermission(Permission.Delete)) {
                    <form action="@(Url.Action<AppController>(c => c.Trash(Model.Id)))" method="post" data-turboform>
                        <button type="submit" class="dropdown-item">@Svg.Icon("delete") @T["Remove tab"]</button>
                    </form>
                }
            }
            @if (WeavyContext.Space.HasPermission(Permission.Apps)) {
                if (Model.HasPermission(Permission.Edit)) {
                    <div class="dropdown-divider"></div>
                }
                <a href="@(Url.Action<AppController>(c => c.Add(WeavyContext.Space.Id)))" class="dropdown-item" data-toggle="modal" data-target="#ajax-modal" data-path="@(Url.Action<AppController>(c => c.Add(WeavyContext.Space.Id)))" data-title="@T["Add tab"]" title="@T["Add tab"]">@Svg.Icon("plus") <span>@T["Add tab"]</span></a>
            }
        </div>
    </div>
}

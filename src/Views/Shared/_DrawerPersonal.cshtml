<aside id="drawer-user" class="drawer drawer-right">
    <header class="drawer-header">
        <div class="dropdown">
            <button type="button" class="btn btn-icon dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="@T["Toggle Dropdown"]">
                @Svg.Icon("dots-vertical")
            </button>
            <div class="dropdown-menu dropdown-menu-right">
                <a class="dropdown-item" href="@(Url.Action<AccountController>(c => c.Edit()))">@Svg.Icon("account") @T["User profile"]</a>
                <a class="dropdown-item" href="@(Url.Action<AccountController>(c => c.Settings()))">@Svg.Icon("format-list-checks") @T["User settings"]</a>
                @if (!ConfigurationService.WindowsAuthentication) {
                    if (ConfigurationService.FormsAuthentication) {
                        <a class="dropdown-item" href="@(Url.Action<AccountController>(c => c.Password()))">@Svg.Icon("account-key") @T["Change password"]</a>
                    }
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="@(Url.Action<AccountController>(c => c.SignOut(null)))" data-turbolinks="false">@Svg.Icon("logout") @T["Sign out"]</a>
                }
            </div>
        </div>
        <div class="text-center pt-3 pb-2">
            @User.AvatarImg(64)
            <p class="drawer-title px-1">
                @if (User.Username != User.GetTitle()) {
                    <span class="mr-1">@User.GetTitle()</span>
                }
                <small>@@@User.Username</small>
            </p>
        </div>
        <nav class="nav nav-tabs" role="tablist">
            <a class="nav-link nav-icon" href="#tab-notifications" data-toggle="tab" role="tab" title="@T["Notifications"]">@Svg.Icon("bell")@Html.NotificationsBadge()</a>
            <a class="nav-link nav-icon" href="#tab-stars" data-toggle="tab" role="tab" title="@T["Stars"]">@Svg.Icon("star")</a>
            <a class="nav-link nav-icon" href="#tab-drafts" data-toggle="tab" role="tab" title="@T["Drafts"]">@Svg.Icon("file")</a>
            <a class="nav-link nav-icon" href="#tab-trash" data-toggle="tab" role="tab" title="@T["Recycle bin"]">@Svg.Icon("delete")</a>
        </nav>
    </header>
    <div class="drawer-body scroll-y tab-content">
        <div class="tab-pane" id="tab-notifications" data-notifications role="tabpanel">
            <header class="navbar navbar-light position-sticky t-0 z-over border-bottom pl-3">
                <h6 class="navbar-title mr-auto">@T["Notifications"]</h6>
                <button type="button" class="btn btn-icon btn-primary" data-read="notifications" title="@T["Mark all as read"]">@Svg.Icon("check-all")</button>
            </header>
            <div class="tab-loading">@Svg.Spinner()</div>
            <div class="tab-remote" data-url="@(Url.Action<NotificationController>(c => c.Index()))"></div>
        </div>

        <div class="tab-pane" id="tab-stars" role="tabpanel">
            <header class="navbar navbar-light position-sticky t-0 z-over border-bottom pl-3">
                <h6 class="navbar-title mr-auto">@T["Stars"]</h6>
            </header>
            <div class="tab-loading">@Svg.Spinner()</div>
            <div class="tab-remote" data-url="@(Url.Action<StarController>(c => c.Index()))"></div>
        </div>
        <div class="tab-pane" id="tab-drafts" role="tabpanel">
            <header class="navbar navbar-light position-sticky t-0 z-over border-bottom pl-3">
                <h6 class="navbar-title mr-auto">@T["Drafts"]</h6>
            </header>
            <div class="tab-loading">@Svg.Spinner()</div>
            <div class="tab-remote" data-url="@(Url.Action<ContentController>(c => c.Drafts()))"></div>
        </div>
        <div class="tab-pane" id="tab-trash" role="tabpanel">
            <header class="navbar navbar-light position-sticky t-0 z-over border-bottom pl-3">
                <h6 class="navbar-title mr-auto">@T["Recycle bin"]</h6>
                @*<button type="button" class="btn btn-icon btn-danger" title="Empty recycle bin">@Svg.Icon("delete")</button>*@
            </header>
            <div class="tab-loading">@Svg.Spinner()</div>
            <div class="tab-remote" data-url="@(Url.Action<RecycleBinController>(c => c.Index()))"></div>
        </div>
    </div>
</aside>

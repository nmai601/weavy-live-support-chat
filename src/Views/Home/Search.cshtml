@model IndexSearchResult
@{
    Title = T["Search"].ToString();
    Back = WeavyContext.ApplicationPath;
    string tab = ViewContext.RouteData.Values["tab"] as string;
    string qs = Request.QueryString.Rebuild("top", null, "skip", null).AsQueryString();
}

<div class="container text-center my-4">
    <div class="mb-4 d-flex flex-column align-items-center mx-auto align-self-center">
        @Html.IconImg(32)
    </div>
    <form action="@Url.Rebuild("q", null)" method="get" data-turboform>
        <div class="form-group" role="search">
            <input class="form-control" type="search" name="q" value="@Model.Query.WrappedQuery.Text" placeholder="@T["Search"] @WeavyContext.System.Name" />
            @if (Model.Query.WrappedQuery.Text.IsNullOrEmpty()) {
                <button type="submit" class="btn btn-icon">@Svg.Icon("magnify")</button>
            } else {
                <a href="@(Url.Action<HomeController>(c => c.Search(null, null)))" class="btn btn-icon">@Svg.Icon("close")</a>
            }
        </div>
    </form>
</div>

<div class="container my-4">
    @if (!string.IsNullOrEmpty(Model.Query.WrappedQuery.Text)) {
        <nav class="nav nav-tabs nav-tabs-cluster scroll-x mb-4">
            @if (tab == null) {
                @(Html.ActionLink<HomeController>(c => c.Search(null, null), qs: qs, text: T["Everything"], htmlAttributes: new { @class = "nav-link active" }))
            } else {
                @(Html.ActionLink<HomeController>(c => c.Search(null, null), qs: qs, text: T["Everything"], htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
            }
            @(Html.ActionLink<HomeController>(c => c.Search("spaces", null), qs: qs, text: T["Spaces"], htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
            @(Html.ActionLink<HomeController>(c => c.Search("posts", null), qs: qs, text: T["Posts"], htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
            @(Html.ActionLink<HomeController>(c => c.Search("files", null), qs: qs, text: T["Files"], htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
            @(Html.ActionLink<HomeController>(c => c.Search("comments", null), qs: qs, text: T["Comments"], htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
        </nav>

        if (Request.IsLocal && User.IsAdmin) {
            <div class="alert alert-info">
                @Model.Query.ToString()
            </div>
        }
    }


    @if (Model.TotalCount == 0 && !string.IsNullOrEmpty(Model.Query.WrappedQuery.Text)) {
        <p>@T["Your search - <strong>{0}</strong> - did not match {1}.", Model.Query.WrappedQuery.Text, (tab == null || tab == "everything" ? T["anything"].ToString() : $"{T["any"].ToString()} {T[tab.ToSentenceCase()].ToString().ToLower()}")]</p>
        <p>@T["Suggestions:"]</p>
        <ul>
            <li>@T["Make sure that all words are spelled correctly."]</li>
            <li>@T["Try different keywords."]</li>
            <li>@T["Try more general keywords."]</li>
            <li>@T["Try fewer keywords."]</li>
        </ul>
    }




    @{ Html.RenderPartial("_SearchResult"); }
</div>

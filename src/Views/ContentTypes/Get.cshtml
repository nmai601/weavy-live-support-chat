@model IPlugin
@{
    Title = T["Content types"].ToString();
    Back = Url.Action<ContentTypesController>(c => c.Index());
}

<div class="container my-3">

    @using (Html.BeginForm(nameof(ContentTypesController.Update), null, FormMethod.Post, new { data_turboform = "" })) {
        @Html.HttpMethodOverride(HttpVerbs.Put)
        <div class="form-group">
            <label class="control-label">@T["Id"]</label>
            <p class="form-control-static">@Model.Id</p>
        </div>
        <div class="form-group">
            <label class="control-label">@T["Type"]</label>
            <p class="form-control-static">@Model.FullName</p>
        </div>
        <div class="form-group">
            <label class="control-label">@T["Description"]</label>
            <p class="form-control-static">@Model.Description</p>
        </div>
        if (!Model.IsLoaded()) {
            <div class="form-group">
                <label class="control-label">@T["Status"]</label>
                <p class="form-control-static">
                    <span class="badge badge-danger">@T["missing"]</span>
                </p>
            </div>
        }

        <div class="form-buttons">
            <a href="@Back" class="btn btn-outline-secondary mr-auto" data-shortcut="Esc">@T["Back"]</a>

            @if (!Model.IsLoaded()) {
                <button type="submit" name="button" value="@nameof(ContentTypesController.Delete)" class="btn btn-danger btn-load" @if (Model.IsCore()) { <text> disabled</text> }>@T["Delete"]</button>
            } else if (!Model.IsCore()) {
                if (Model.IsEnabled) {
                    <button type="submit" name="button" value="@nameof(ContentTypesController.Disable)" class="btn btn-outline-warning btn-load">@T["Disable"]</button>
                } else {
                    <button type="submit" name="button" value="@nameof(ContentTypesController.Enable)" class="btn btn-outline-success btn-load">@T["Enable"]</button>
                }
            }


        </div>
    }
</div>



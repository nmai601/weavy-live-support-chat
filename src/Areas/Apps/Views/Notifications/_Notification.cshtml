@model Notification
@{
    var html = Model.Html.TruncateQuotesAndConvertEmojiToImage(64);
    var title = html.Contains("…") ? Model.Text.ExtractQuote() : null;
}

<a href="@Model.Url()" class="list-group-item list-group-item-action notification @(Model.IsRead ? "read": "")" data-type="notification" data-id="@Model.Id">
    <div class="media">
        @Model.AvatarImg(32, htmlAttributes: new { @class = "mt-1" })
        <div class="media-body">
            <p class="mb-2" title="@title">@Html.Raw(html)</p>
            <div class="d-flex justify-content-between text-muted">
                <small>@Html.Time(Model.CreatedAt) </small>
                <button type="button" class="btn btn-icon btn-primary" data-toggle="notification" data-id="@Model.Id" title="@(Model.IsRead? T["Mark as unread"].ToString() : T["Mark as read"].ToString())">@Svg.Icon("check", size: 18)</button>
            </div>
        </div>
    </div>
</a>
